version: '3.8'

services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: traafik-postgres
    environment:
      POSTGRES_DB: traafik
      POSTGRES_USER: traafik
      POSTGRES_PASSWORD: traafik123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/main/resources/db/init:/docker-entrypoint-initdb.d
    networks:
      - traafik-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U traafik -d traafik"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: traafik-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - traafik-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: traafik-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_DEFAULT_BUCKETS: traafik-attachments
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - traafik-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mailhog:
    image: mailhog/mailhog:latest
    container_name: traafik-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - traafik-network

  prometheus:
    image: prom/prometheus:latest
    container_name: traafik-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./backend/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - traafik-network

  grafana:
    image: grafana/grafana:latest
    container_name: traafik-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./backend/monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - traafik-network
    depends_on:
      - prometheus

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: traafik-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/traafik
      SPRING_DATASOURCE_USERNAME: traafik
      SPRING_DATASOURCE_PASSWORD: traafik123
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: redis123
      APP_STORAGE_MINIO_ENDPOINT: http://minio:9000
      APP_STORAGE_MINIO_ACCESS_KEY: minioadmin
      APP_STORAGE_MINIO_SECRET_KEY: minioadmin123
      APP_MAIL_HOST: mailhog
      APP_MAIL_PORT: 1025
    ports:
      - "8080:8080"
    networks:
      - traafik-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: traafik-frontend
    ports:
      - "3000:80"
    networks:
      - traafik-network
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  traafik-network:
    driver: bridge